<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>3</block><killingTest>pachet2.MyClassTest.equivalencePartitioning(pachet2.MyClassTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>pachet2.MyClassTest.equivalencePartitioning(pachet2.MyClassTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>3</block><killingTest>pachet2.MyClassTest.equivalencePartitioning(pachet2.MyClassTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>4</block><killingTest>pachet2.MyClassTest.equivalencePartitioning(pachet2.MyClassTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>6</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>lambda$isPrime$0</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>24</block><killingTest/><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>lambda$isPrime$0</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>24</block><killingTest>pachet2.MyClassTest.branchCoverage(pachet2.MyClassTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>lambda$isPrime$0</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>26</block><killingTest>pachet2.MyClassTest.branchCoverage(pachet2.MyClassTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>lambda$isPrime$1</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>21</block><killingTest>pachet2.MyClassTest.branchCoverage(pachet2.MyClassTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>lambda$isPrime$1</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>21</block><killingTest>pachet2.MyClassTest.branchCoverage(pachet2.MyClassTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>lambda$isPrime$1</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>23</block><killingTest>pachet2.MyClassTest.branchCoverage(pachet2.MyClassTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>lambda$solve$2</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>18</block><killingTest>pachet2.MyClassTest.killChangedConditionalBoundary(pachet2.MyClassTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>lambda$solve$2</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>18</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>lambda$solve$2</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>20</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>lambda$solve$3</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>17</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>7</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>8</block><killingTest>pachet2.MyClassTest.killChangedConditionalBoundary(pachet2.MyClassTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>9</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>10</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><block>14</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>7</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>8</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>9</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>10</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>12</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>14</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>11</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>13</block><killingTest>pachet2.MyClassTest.conditionCoverage(pachet2.MyClassTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>16</block><killingTest>pachet2.MyClassTest.statementCoverage(pachet2.MyClassTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>11</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MyClass.java</sourceFile><mutatedClass>pachet1.MyClass</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>13</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
</mutations>
